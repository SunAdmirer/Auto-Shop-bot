from aiogram.types import CallbackQuery

from django_project.telegrambot.usersmanage.models import Goods
from keyboards.inline.purchases_keyboard import quantity_cd, keyboard_quantity_menu
from loader import dp

from utils.database.commands.commands_goods import select_goods_quantity


# –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–∫—É–ø–∫—É -----------------------------------------------------------------------------------------------------
@dp.callback_query_handler(text_contains="cancel")
async def cancel_button(call: CallbackQuery):
    await call.message.delete()


@dp.callback_query_handler(quantity_cd.filter())
async def quantity_button_enlarge(call: CallbackQuery, callback_data: dict):
    goods_pk = callback_data.get("goods_pk")
    city = callback_data.get("city")
    address = callback_data.get("address")
    operation = callback_data.get("operation")
    quantity = int(callback_data.get("quantity"))

    goods_exist = await select_goods_quantity(goods_pk)

    if operation == "‚ûï" and quantity < goods_exist:
        quantity += 1
    elif operation == "‚ûñ" and quantity != 1:
        quantity -= 1
    elif operation == "‚ûï" and quantity == goods_exist:
        await call.answer("–ù–∞ —Å–∫–ª–∞–¥–µ –±–æ–ª—å—à–µ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Ç—É!!!", cache_time=15, show_alert=True)
    elif operation == "‚ûñ" and quantity == 1:
        await call.answer("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–≤–Ω—è—Ç—å—Å—è –Ω—É–ª—é!!!", cache_time=15, show_alert=True)

    markup = await keyboard_quantity_menu(goods_pk=goods_pk, city=city, address=address, quantity=quantity)
    await call.message.edit_reply_markup(markup)


# Template –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ç–æ–≤–∞—Ä–∞ –∏ –Ω–æ–≤–æ–≥–æ —à–∞–≥–∞.
async def template_goods_text(goods: Goods, text_next_step: str = None) -> str:
    template = f"<b>{goods.name}</b>\n\n" \
               f"–í—Å–µ–≥–æ –Ω–∞ —Å–∫–ª–∞–¥–µ: {goods.quantity} —à—Ç.\n" \
               f"–¶–µ–Ω–∞ –∑–∞ 1 —à—Ç: {goods.cost} –≥—Ä–Ω.\n\n" \
               f"{goods.description}\n\n"

    if text_next_step:
        template += f"ü†óü†óü†ó<b>{text_next_step}</b>ü†óü†óü†ó"

    return template
